{
  "name": "conventiona-commit-ai",
  "displayName": "Conventiona Commit AI",
  "description": "Conventional Commit AI es una extensión que usa inteligencia artificial generativa, como OpenAI, para crear mensajes de commit según el estándar Conventional Commits. Genera automáticamente mensajes claros y organizados, optimizando el flujo de trabajo de los desarrolladores.",
  "version": "1.0.1",
  "publisher": "LomitoDev",
  "license": "MIT",
  "icon": "media/icon.jpg",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Machine Learning",
    "SCM Providers",
    "Other"
  ],
  "pricing": "Free",
  "sponsor": {
    "url": "https://github.com/jpablo-ortiz"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jpablo-ortiz/conventiona-commit-ai.git"
  },
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "conventiona-commit-ai.setOpenAiKey",
        "title": "Set OpenAI Key"
      },
      {
        "command": "conventiona-commit-ai.deleteOpenAiKey",
        "title": "Delete OpenAI Key"
      },
      {
        "command": "conventiona-commit-ai.generateCommit",
        "title": "Create Commit With AI",
        "icon": {
          "light": "media/light_bulb.png",
          "dark": "media/dark_bulb.png"
        }
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "conventiona-commit-ai.generateCommit",
          "when": "scmProvider == git",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Conventional Commit AI",
      "properties": {
        "conventional-commit-ai.openAiApiKey": {
          "type": "string",
          "default": null,
          "markdownDescription": "Your OpenAI API key. You can get one [here](https://platform.openai.com/)."
        },
        "conventional-commit-ai.openAiMaxToken": {
          "type": "number",
          "default": 1000,
          "minimum": 10,
          "markdownDescription": "1,000 tokens is about 750 words. The [price](https://openai.com/pricing) per token is different for each model. **``1000`` is recommended**"
        },
        "conventional-commit-ai.openAiTemperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "markdownDescription": "Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive. **``0.7`` is recommended**"
        },
        "conventional-commit-ai.openAiModel": {
          "type": "string",
          "default": "gpt-4o-mini",
          "markdownDescription": "The model to use for generating commit messages. The [price](https://openai.com/pricing) per token is different for each model."
        },
        "conventional-commit-ai.customSystemPrompt": {
          "type": "string",
          "default": null,
          "markdownDescription": "Set a custom prompt describing the commit message format to generate. To allow language support, use the {language} placeholder in the prompt. If you don't set a custom prompt, the default one will be used."
        },
        "conventional-commit-ai.commitLanguage": {
          "type": "string",
          "default": "English",
          "markdownDescription": "Language for the commit messages (English, Español, Français, Etc...)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3"
  },
  "dependencies": {
    "openai": "^4.28.0"
  }
}